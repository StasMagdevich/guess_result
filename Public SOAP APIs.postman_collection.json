{
	"info": {
		"_postman_id": "1d4065f2-38f4-4b0b-95eb-a5421a0b6809",
		"name": "Public SOAP APIs",
		"description": "This is a collection of different SOAP APIs that are completley public and do not require any authentication, making it easier for consumers to play with and understand what APIs are all about by seeing the many different ways in which APIs can be used.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26715865"
	},
	"item": [
		{
			"name": "Book ISBN Numbers",
			"item": [
				{
					"name": "Is Valid ISBN13 Number",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonObject = xml2Json(responseBody);",
									"var envelope = jsonObject['soap:Envelope'];",
									"var body = envelope['soap:Body'];",
									"var result = body['m:IsValidISBN13Response']['m:IsValidISBN13Result'];",
									"",
									"pm.test(\"1) Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"2) ISBN13 is valid\", function () {",
									"    pm.expect(result).to.eql(\"true\");",
									"});",
									"",
									"pm.test(\"3) Response has Envelope\", function () {",
									"    pm.expect(jsonObject).to.have.property('soap:Envelope');",
									"});",
									"",
									"pm.test(\"4) Response has Body\", function () {",
									"    pm.expect(envelope).to.have.property('soap:Body');",
									"});",
									"",
									"pm.test(\"5) Envelope has xmlns:soap attribute\", function () {",
									"    pm.expect(envelope.$).to.have.property('xmlns:soap');",
									"});",
									"",
									"pm.test(\"6) Response has xmlns:m attribute\", function () {",
									"    pm.expect(body['m:IsValidISBN13Response'].$).to.have.property('xmlns:m');",
									"});",
									"",
									"pm.test(\"7) Result matches regex (true)\", function () {",
									"    pm.expect(result).to.match(/^(true)$/);",
									"});",
									"",
									"pm.test(\"8) Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"",
									"pm.test(\"9) Content-Type is text/xml\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"text/xml\");",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/xml; charset=utf-8",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\n  <soap:Body>\n    <IsValidISBN13 xmlns=\"http://webservices.daehosting.com/ISBN\">\n      <sISBN>978-1-4612-9090-2</sISBN>\n    </IsValidISBN13>\n  </soap:Body>\n</soap:Envelope>"
						},
						"url": {
							"raw": "http://webservices.daehosting.com/services/isbnservice.wso",
							"protocol": "http",
							"host": [
								"webservices",
								"daehosting",
								"com"
							],
							"path": [
								"services",
								"isbnservice.wso"
							]
						},
						"description": "The test is done by calculation on the first 12 digits and compare the result with the checksum number at the end. You have to pass a 13 digits number."
					},
					"response": []
				},
				{
					"name": "ISBN13 Number Negative Tests",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonObject = xml2Json(responseBody);",
									"console.log(jsonObject);",
									"var envelope = jsonObject['soap:Envelope'];",
									"var body = envelope['soap:Body'];",
									"var result = body['m:IsValidISBN13Response']['m:IsValidISBN13Result'];",
									"",
									"",
									"pm.test(\"1) ISBN13 is valid\", function () {",
									"    pm.expect(result).to.eql(\"false\");",
									"});",
									"",
									"pm.test(\"2) Result matches regex (true)\", function () {",
									"    pm.expect(result).to.match(/^(false)$/);",
									"});",
									"",
									"pm.test(\"3) ISBN13 is not true\", function () {",
									"    pm.expect(result).not.eql(\"true\");",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/xml; charset=utf-8",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\n  <soap:Body>\n    <IsValidISBN13 xmlns=\"http://webservices.daehosting.com/ISBN\">\n      <sISBN>978-1-4612</sISBN>\n    </IsValidISBN13>\n  </soap:Body>\n</soap:Envelope>"
						},
						"url": {
							"raw": "http://webservices.daehosting.com/services/isbnservice.wso",
							"protocol": "http",
							"host": [
								"webservices",
								"daehosting",
								"com"
							],
							"path": [
								"services",
								"isbnservice.wso"
							]
						},
						"description": "The test is done by calculation on the first 12 digits and compare the result with the checksum number at the end. You have to pass a 13 digits number."
					},
					"response": []
				},
				{
					"name": "Is Valid ISBN10 Number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonObject = xml2Json(responseBody);",
									"var envelope = jsonObject['soap:Envelope'];",
									"var body = envelope['soap:Body'];",
									"var result = body['m:IsValidISBN10Response']['m:IsValidISBN10Result'];",
									"",
									"pm.test(\"ISBN10 result exists\", function () {",
									"    pm.expect(result).to.not.be.undefined;",
									"});",
									"",
									"pm.test(\"result is a string\", function () {",
									"    pm.expect(result).to.be.a(\"string\");",
									"});",
									"",
									"pm.test(\"result matches regex\", function () {",
									"    pm.expect(result).to.match(/^(true|false)$/);",
									"});",
									"",
									"pm.test(\"Envelope present\", function () {",
									"    pm.expect(jsonObject).to.have.property('soap:Envelope');",
									"});",
									"",
									"pm.test(\"body present\", function () {",
									"    pm.expect(envelope).to.have.property('soap:Body');",
									"});",
									"",
									"pm.test(\"Namespace exists\", function () {",
									"    pm.expect(body['m:IsValidISBN10Response'].$).to.have.property('xmlns:m');",
									"});",
									"",
									"pm.test(\"Result is not empty\", function () {",
									"    pm.expect(result).not.eql(\"\");",
									"});",
									"",
									"pm.test(\"header server exists\", function () {",
									"    pm.expect(pm.response.headers.has(\"Server\")).to.be.true;",
									"});",
									"",
									"pm.test(\"Response time is less than 700ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(700);",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/xml; charset=utf-8",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\n  <soap:Body>\n    <IsValidISBN10 xmlns=\"http://webservices.daehosting.com/ISBN\">\n      <sISBN>0-19-852663-6</sISBN>\n    </IsValidISBN10>\n  </soap:Body>\n</soap:Envelope>"
						},
						"url": {
							"raw": "http://webservices.daehosting.com/services/isbnservice.wso",
							"protocol": "http",
							"host": [
								"webservices",
								"daehosting",
								"com"
							],
							"path": [
								"services",
								"isbnservice.wso"
							]
						},
						"description": "The test is done by calculation on the first 9 digits and compare the result with the checksum number at the end. You have to pass a 10 digits number or 8 digits and an X."
					},
					"response": []
				}
			],
			"description": "SOAP APIs for book ISBN numbers.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "jsonObject",
			"value": ""
		}
	]
}